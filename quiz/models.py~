from django.db import models
from django.utils import timezone
from django.contrib.auth.models import User

# Create your models here.
class Category(models.Model):
    category_name = models.CharField(max_length=200)
    def __str__(self):
        return self.category_name

class Question(models.Model):
    #id=models.AutoField(primary_key=True)    Dette skjer automatisk for hver model
    question_name = models.CharField(max_length=200)
    published_date = models.DateTimeField(blank=True,null=True)
    category = models.ForeignKey('Category', on_delete = models.CASCADE)
    def publish(self):
        self.published_date = timezone.now()
        self.save()
        
    def __str__(self):
        return self.question_name

class Choice(models.Model):
    question = models.ForeignKey('Question', on_delete = models.CASCADE,default=1)
    choice_name = models.CharField(max_length=200)
    is_correct = models.BooleanField(default=False)
    def __str__(self):
        return self.choice_name
    
class Person(models.Model):
    first_name = models.CharField(max_length=200)
    last_name = models.CharField(max_length=200)
    user_name = models.CharField(max_length=200)
    password = models.CharField(max_length=200)
    score = models.IntegerField(default=0)
    total_score = models.IntegerField(default=0)
    def __str__(self):
        return self.user_name
class Categoryscore(models.Model):
    person = models.ForeignKey('User')
    points = models.IntegerField(default=0)
    category=models.ForeignKey('Category',on_delete=models.CASCADE)
    score_date = models.DateTimeField(blank=True,null=True)
    def scoredate(self):
        self.score_date = timezone.now()

    

        
    #class Score(models.Model):
#category
#user

#class MytypeField(models.Field):
#    def db_type(self,connection):
#        return 'mtype'
